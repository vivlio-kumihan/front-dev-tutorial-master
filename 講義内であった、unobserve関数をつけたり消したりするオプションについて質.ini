講義内であった、unobserve関数をつけたり消したりするオプションについて質問です。

このオプションの実装はできないという理解でよろしいでしょうか？

class ScrollObserver {
    constructor(els, cb, options) {
        this.els = document.querySelectorAll(els);
        const defaultOptions = {
            root: null,
            rootMargin: "0px",
            threshold: 0,
            // 該当部分 //
            once: true
        };
        this.cb = cb;
        this.options = Object.assign(defaultOptions, options);
        // 該当部分 //
        this.once = this.options.once;
        this._init();
    }
    _init() {
        const callback = function (entries, observer) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    this.cb(entry.target, true);
                    // 該当部分 //
                    if(this.once) {
                        observer.unobserve(entry.target);
                    }
                } else {
                    this.cb(entry.target, false);
                }
            });
        };

オプションをつける。

document.addEventListener('DOMContentLoaded', function () {

    const cb = function (el, isIntersecting) {
        if(isIntersecting) {
            const ta = new TextAnimation(el);
            ta.animate();
        }
    }

    const so = new ScrollObserver('.animate-title', cb, { rootMargin: "0px 0px", once:false });
...
...
...

または、このようにオプションをつける。

const so = new ScrollObserver('.animate-title', cb, { once: false });

どちらも、画面がバグります。そもそも、unobserve関数を外したらこちらも画面がバグります。

オプションはrootMarginを上書きさせているだけ、

document.addEventListener('DOMContentLoaded', function () {

    const cb = function (el, isIntersecting) {
        if(isIntersecting) {
            const ta = new TextAnimation(el);
            ta.animate();
        }
    }

    const so = new ScrollObserver('.animate-title', cb, { rootMargin: "0px 0px" });
});

unobserve関数に関係している箇所を全て外す。

class ScrollObserver {
    constructor(els, cb, options) {
        this.els = document.querySelectorAll(els);
        const defaultOptions = {
            root: null,
            rootMargin: "0px",
            threshold: 0,
            // once: true
        };
        this.cb = cb;
        this.options = Object.assign(defaultOptions, options);
        // this.once = this.options.once;
        this._init();
    }
    _init() {
        const callback = function (entries, observer) {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    this.cb(entry.target, true);
                    // if(this.once) {
                    //     observer.unobserve(entry.target);
                    // }
                } else {
                    this.cb(entry.target, false);
                }
            });
        };

        this.io = new IntersectionObserver(callback.bind(this), this.options);

        // @see https://github.com/w3c/IntersectionObserver/tree/master/polyfill
        this.io.POLL_INTERVAL = 100;
        
        this.els.forEach(el => this.io.observe(el));
    }

    destroy() {
        this.io.disconnect();
    }
}

以上は、endフォルダにあったソースにオプションをつけて試しております。

まとめます。1. 一回目のスクロールに連動するが2回目以降は連動しないアニメーションというもので進んでいくのでしょうか？